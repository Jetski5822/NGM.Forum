@using NGM.Forum
@using NGM.Forum.Extensions
@using NGM.Forum.Models
@{
    var threadPart = (ThreadPart)Model.ContentPart;
    var firstPostPart = (PostPart)Model.FirstPost;
    var newPostPart = (PostPart)Model.NewPost;
    var forumsHomePage = Model.ForumsHomePagePart;
}

<div class="thread-user-options">

    @*  show the reply button regardless of the user's permissions.. most likely they need to log in or sign up 
    @if (Authorizer.Authorize(Permissions.CreateThreadsAndPosts))
    {
    *@

        @if (!firstPostPart.ThreadPart.IsClosed)
        {
        <a href="@Url.PostReply(firstPostPart)" class="create btn-thread-option btn-user btn btn-primary btn-sm">@T("Reply to Thread")</a>
        }

    @*
    }
    *@
</div>

<div class="thread-management-options">
    @if (Authorizer.Authorize(Permissions.DeleteThreadsAndPosts, forumsHomePage) && firstPostPart.IsParentThread())
    {
        <a href="@Url.ThreadDelete(threadPart)" class="delete btn-thread-option btn-admin">@T("Delete")</a>
    }
    @if (Authorizer.Authorize(Permissions.MoveThread, forumsHomePage) && firstPostPart.IsParentThread())
    {
        <a href="@Url.ThreadMove(threadPart)" class="move btn-thread-option btn-admin">@T("Move")</a>
    }

    @if (Authorizer.Authorize(Permissions.CloseThread, forumsHomePage) && firstPostPart.IsParentThread())
    {
        if (threadPart.IsClosed)
        {
        <a href="@Url.ThreadOpen(threadPart)" class="open btn-thread-option btn-admin">@T("Open")</a>
        }
        else
        {
        <a href="@Url.ThreadClose(threadPart)" class="close btn-thread-option btn-admin">@T("Close")</a>
        }

    }
</div>

@using (Script.Foot())
{
    <script type="text/javascript">
        //<![CDATA[
        $(document).ready(function () {
            $("document").on("click", ".delete.btn-post-option.btn-admin", function () {
                return confirm("@T("Do you want to delete this thread?  Deleting the thread will also remove all associated posts.  Deletion is permanent and cannot be undone.").ToString()");
            });
           
        });
        //]]>
    </script>
}